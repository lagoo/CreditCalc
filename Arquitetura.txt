Levando em consideração a situação, a probabilidade do crescimento e a necessidade de escalabilidade da aplicação em hipótese, considero como uma opção a utilização de uma arquitetura de microsserviços, com CQRS e Event Sourcing, porém seria necessário avaliar o número de serviços necessários para a construção da aplicação e a possibilidade de crescimento, uma vez que somente se tornaria necessária essa implementação caso existisse um número considerável de microsserviços (acima de 100). Caso essas condições sejam atendidas, a melhor opção seria a arquitetura em questão, pois, com isso, é possível deixar à critério de cada squad qual tecnologia utilizar no serviço (qual linguagem e qual banco de dados, por exemplo).  Caso não sejam atendidas as condições, a arquitetura mais adequada seria a monolítica, mantendo o uso de CQRS e Event Sourcing, com um banco de gravação e outro de leitura, mas, neste caso, fazendo uso apenas de um banco de dados para toda a aplicação, diferentemente do microsserviço, no qual deve ser feita a criação de um banco para cada serviço.

Para uma melhor comunicação com sistemas de terceiros, uma padronização de comunicação é importante. Nesse sentido, eu, particularmente, escolheria JSON, pois a maior parte das linguagens e frameworks suportam JSON, tanto para input quanto output. Para comunicações com mainframe, optaria por uma comunicação direta e rápida, por meio de stream de byte, utilizando uma linguagem que comporte esse tipo de processamento e comunicação com alta performance.

Para um deploy fácil, escalonável e contínuo, optaria por Docker e Kubernetes. No caso do Docker, a escolha seria por ser uma ferramenta utilizada tanto para o momento do desenvolvimento quanto para produção, além de facilitar um novo deploy, replicar e utilizar mesmas versões de aplicações das quais o sistema depende. No caso do Kubernetes, seria pela razão de a ferramenta gerenciar todos os containers criados e suas máquinas registradas, podendo, assim, subir ou fechar containers conforme a necessidade e o uso de processamento.